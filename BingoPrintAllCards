

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

public class BingoPrintAllCards extends JPanel {
    private Font GSBold;
    private Font DMRegular;
    private Font DMItalic;
    private Font JBExtraBold;
 
    private int count;
    private int seed;
    private int amount;
    private int tac;
    ArrayList<BingoCard> bingoListC = new ArrayList<BingoCard>();
    BingoCard bingoC;
    public BingoPrintAllCards (int totalamountcards,ArrayList<BingoCard> bingoList) 
    {
    	tac = totalamountcards;
    	bingoListC = bingoList;
    }
    public void makePage(Graphics g, BufferedImage image) 
    {
    	int pop = 4;
    	int start = 1;
    	int i = 1;
    	while(i<= tac) 
    	{
    		
    		if(i <=tac) 
    		{
    			g.setColor(new Color(255, 255, 255));
    			g.fillRect(0, 0, 510, 655);
    			g.setColor(new Color(51, 153, 255));
    			g.fillRect(0, 0, 510, 5);
    			g.fillRect(0,5,5,655);
    			g.fillRect(505, 5, 5, 655);
    			g.fillRect(5,655,500,5);
    			g.setColor(new Color(0, 0, 0));
    			g.drawRect(6, 155, 497, 498);
    			g.drawLine(6, 255, 503, 255);
    			g.drawLine(6, 355, 503, 355);
    			g.drawLine(6, 455, 503, 455);
    			g.drawLine(6, 555, 503, 555);
    			g.drawLine(106, 155, 106, 653);
    			g.drawLine(206, 155, 206, 653);
    			g.drawLine(306, 155, 306, 653);
    			g.drawLine(406, 155, 406, 653);
    			g.setColor(new Color(51, 204, 255));
    			g.fillRect(5, 5, 500, 150);
    			g.setColor(new Color(255, 0, 0));
    			Font bingoFont1 = new Font("Serif", Font.BOLD, 120);
    			g.setFont(bingoFont1);
    			g.drawString("B", 20, 130);
    			g.drawString("I", 130, 130);
    			g.drawString("N", 205, 130);
    			g.drawString("G", 310, 130);
    			g.drawString("O", 410, 130);
    			g.setColor(new Color(255, 255, 0));
    			g.fillRect(207, 356, 98, 99);
    			g.setColor(new Color(0, 0, 0));
    			Font freeFont1 = new Font("Plain", Font.BOLD, 36);
    			g.setFont(freeFont1);
    			g.drawString("FREE", 209,418);
    			g.drawLine(210, 375, 300, 375);
    			g.drawLine(210, 435, 300, 435);
    			g.drawString("#"+String.valueOf(i), 5, 30);
    			Font bingoNumFont1 = new Font("Plain", Font.BOLD, 84);
    			g.setFont(bingoNumFont1);
    			
    			bingoC = bingoListC.get(i-1);
    		      for (int ii=0; ii<5; ii++)
    		        {
    		            g.drawString(String.valueOf(bingoC.bCell[ii]), 12,235+ii*100);
    		 
    		        }
    		        for (int ii=0; ii<5; ii++)
    		        {
    		            g.drawString(String.valueOf(bingoC.iCell[ii]), 112,235+ii*100);
    		 
    		        }
    		        for (int ii=0; ii<5; ii++)
    		        {
    		        	if(ii!=2) {
    		        		g.drawString(String.valueOf(bingoC.nCell[ii]), 212,235+ii*100);
    		  
    		        	}
    		        }
    		        for (int ii=0; ii<5; ii++)
    		        {
    		            g.drawString(String.valueOf(bingoC.gCell[ii]), 312,235+ii*100);
    		 
    		        }
    		        for (int ii=0; ii<5; ii++)
    		        {
    		            g.drawString(String.valueOf(bingoC.oCell[ii]), 412,235+ii*100);
    		 
    		        } 			
    			i++;
    		}
    		if(i <=tac) 
    		{
        //card 2
    			g.setColor(new Color(255, 255, 255));
    			g.fillRect(590, 0, 510, 655);
    			g.setColor(new Color(51, 153, 255));
    			g.fillRect(590, 0, 510, 5);
    			g.fillRect(590,5,5,655);
    			g.fillRect(1095, 5, 5, 655);
    			g.fillRect(595,655,500,5);
    			g.setColor(new Color(0, 0, 0));
    			g.drawRect(596, 155, 1077, 498);
    			g.drawLine(596, 255, 1093, 255);
    			g.drawLine(596, 355, 1093, 355);
    			g.drawLine(596, 455, 1093, 455);
    			g.drawLine(596, 555, 1093, 555);
    			g.drawLine(696, 155, 696, 653);
    			g.drawLine(796, 155, 796, 653);
    			g.drawLine(896, 155, 896, 653);
    			g.drawLine(996, 155, 996, 653);
    			g.setColor(new Color(51, 204, 255));
    			g.fillRect(595, 5, 500, 150);
    			g.setColor(new Color(255, 0, 0));
    			Font bingoFont = new Font("Serif", Font.BOLD, 120);
		        g.setFont(bingoFont);
		        g.drawString("B", 610, 130);
		        g.drawString("I", 720, 130);
		        g.drawString("N", 795, 130);
		        g.drawString("G", 900, 130);
		        g.drawString("O", 1000, 130);
		        g.setColor(new Color(255, 255, 0));
		        g.fillRect(797, 356, 98, 99);
		        g.setColor(new Color(0, 0, 0));
		        Font freeFont = new Font("Plain", Font.BOLD, 36);
		        g.setFont(freeFont);
		        g.drawString("FREE", 799,418);
		        g.drawLine(800, 375, 890, 375);
		        g.drawLine(800, 435, 890, 435);
		        g.drawString("#"+String.valueOf(i),595 , 30);
		        Font bingoNumFont = new Font("Plain", Font.BOLD, 84);
		        g.setFont(bingoNumFont);
		        
	   			bingoC = bingoListC.get(i-1);
  		      for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.bCell[ii]), 602,235+ii*100);
  		 
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.iCell[ii]), 702,235+ii*100);
  		 
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		        	if(ii!=2) {
  		        		g.drawString(String.valueOf(bingoC.nCell[ii]), 802,235+ii*100);
  		  
  		        	}
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.gCell[ii]), 902,235+ii*100);
  		 
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.oCell[ii]), 1002,235+ii*100);
  		 
  		        } 			
		        
		        i++;
    		}
       
        if(i <=tac) 
        {
        //card 3
		        g.setColor(new Color(255, 255, 255));
		        g.fillRect(0, 675, 510, 655);
		        g.setColor(new Color(51, 153, 255));
		        g.fillRect(0, 675, 510, 5);
		         g.fillRect(0,680,5,655);
		         g.fillRect(505, 680, 5, 655);
		         g.fillRect(5,1330,500,5);
		        g.setColor(new Color(0, 0, 0));
		        g.drawRect(6, 830, 497, 1173);
		        g.drawLine(6, 930, 503, 930);
		        g.drawLine(6, 1030, 503, 1030);
		        g.drawLine(6, 1130, 503, 1130);
		        g.drawLine(6, 1230, 503, 1230);
		        g.drawLine(106, 830, 106, 1328);
		        g.drawLine(206, 830, 206, 1328);
		        g.drawLine(306, 830, 306, 1328);
		        g.drawLine(406, 830, 406, 1328);
		        g.setColor(new Color(51, 204, 255));
		        g.fillRect(5, 680, 500, 150);
		        g.setColor(new Color(255, 0, 0));
		        Font bingoFont11 = new Font("Serif", Font.BOLD, 120);
		        g.setFont(bingoFont11);
		        g.drawString("B", 20, 805);
		        g.drawString("I", 130, 805);
		        g.drawString("N", 205, 805);
		        g.drawString("G", 310, 805);
		        g.drawString("O", 410, 805);
		        g.setColor(new Color(255, 255, 0));
		        g.fillRect(207, 1031, 98, 89);
		        g.setColor(new Color(0, 0, 0));
		        Font freeFont11 = new Font("Plain", Font.BOLD, 36);
		        g.setFont(freeFont11);
		        g.drawString("FREE", 209,1093);
		        g.drawLine(210, 1050, 300, 1050);
		        g.drawLine(210, 1110, 300, 1110);
		        g.drawString("#"+String.valueOf(i), 7, 705);
		        Font bingoNumFont11 = new Font("Plain", Font.BOLD, 84);
		        g.setFont(bingoNumFont11);
		        
	   			bingoC = bingoListC.get(i-1);
  		      for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.bCell[ii]), 12,910+ii*100);
  		 
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.iCell[ii]), 112,910+ii*100);
  		 
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		        	if(ii!=2) {
  		        		g.drawString(String.valueOf(bingoC.nCell[ii]), 212,910+ii*100);
  		  
  		        	}
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.gCell[ii]), 312,910+ii*100);
  		 
  		        }
  		        for (int ii=0; ii<5; ii++)
  		        {
  		            g.drawString(String.valueOf(bingoC.oCell[ii]), 412,910+ii*100);
  		 
  		        } 			
		        
		  i++;
        }
        if(i <=tac) {
       //card 4
        g.setColor(new Color(255, 255, 255));
        g.fillRect(590, 675, 510, 655);
        g.setColor(new Color(51, 153, 255));
        g.fillRect(590, 675, 510, 5);
         g.fillRect(590,680,5,655);
         g.fillRect(1095, 680, 5, 655);
         g.fillRect(595,1330,500,5);
        g.setColor(new Color(0, 0, 0));
        g.drawRect(596, 830, 1097, 1173);
        g.drawLine(596, 930, 1093, 930);
        g.drawLine(596, 1030, 1093, 1030);
        g.drawLine(596, 1130, 1093, 1130);
        g.drawLine(596, 1230, 1093, 1230);
        g.drawLine(696, 830, 696, 1328);
        g.drawLine(796, 830, 796, 1328);
        g.drawLine(896, 830, 896, 1328);
        g.drawLine(996, 830, 996, 1328);
        g.setColor(new Color(51, 204, 255));
        g.fillRect(595, 680, 500, 150);
        g.setColor(new Color(255, 0, 0));
        Font bingoFont111 = new Font("Serif", Font.BOLD, 120);
        g.setFont(bingoFont111);
        g.drawString("B", 610, 805);
        g.drawString("I", 720, 805);
        g.drawString("N", 795, 805);
        g.drawString("G", 900, 805);
        g.drawString("O", 1000, 805);
        g.setColor(new Color(255, 255, 0));
        g.fillRect(797, 1031, 98, 89);
        g.setColor(new Color(0, 0, 0));
        Font freeFont111 = new Font("Plain", Font.BOLD, 36);
        g.setFont(freeFont111);
        g.drawString("FREE", 799,1093);
        g.drawLine(800, 1050, 890, 1050);
        g.drawLine(800, 1110, 890, 1110);
        g.drawString("#"+String.valueOf(i), 597, 705);
        Font bingoNumFont111 = new Font("Plain", Font.BOLD, 84);
        g.setFont(bingoNumFont111);

			bingoC = bingoListC.get(i-1);
		      for (int ii=0; ii<5; ii++)
		        {
		            g.drawString(String.valueOf(bingoC.bCell[ii]), 602,910+ii*100);
		 
		        }
		        for (int ii=0; ii<5; ii++)
		        {
		            g.drawString(String.valueOf(bingoC.iCell[ii]), 702,910+ii*100);
		 
		        }
		        for (int ii=0; ii<5; ii++)
		        {
		        	if(ii!=2) {
		        		g.drawString(String.valueOf(bingoC.nCell[ii]), 802,910+ii*100);
		  
		        	}
		        }
		        for (int ii=0; ii<5; ii++)
		        {
		            g.drawString(String.valueOf(bingoC.gCell[ii]), 902,910+ii*100);
		 
		        }
		        for (int ii=0; ii<5; ii++)
		        {
		            g.drawString(String.valueOf(bingoC.oCell[ii]), 1002,910+ii*100);
		 
		        } 			
		        i++;
        
        }
        try {
        	File cardFile = new File("C:\\BingoCard\\card" + start + "-"+(i-1)+".png");
        	new File(cardFile.getParent()).mkdirs();
            ImageIO.write(image, "png", cardFile);
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("no png");
        }
        System.out.println("Done");
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, 9999, 9999);
     start+= 4;
     pop+=4;
    }
   
    }

    public void paint(Graphics g) {
        System.out.println("Checkpoint 2");
   
        BufferedImage image = new BufferedImage(1100, 1350, 2);
        Graphics g2 = image.getGraphics();
        makePage(g2, image);
        for (int i = 0; i < this.amount; i += 4)
            makePage(g2, image);
    }

}
